{"version":3,"sources":["components/Post.js","components/PostsList.js","components/PostForm.js","components/Sidebar.js","components/PostView.js","App.js","index.js"],"names":["Post","props","react_default","a","createElement","className","title","defaultProps","contents","posts","PostsList","map","post","Link","to","concat","id","key","components_Post","reverse","PostForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNote","event","preventDefault","state","length","alert","axios","then","setState","catch","error","console","log","fetchPosts","history","push","window","scrollTo","handleInputChange","e","defineProperty","target","name","value","onSubmit","onChange","placeholder","type","Component","Sidebar","PostView","fetch","get","res","data","err","dir","toggleEdit","editing","editSubmitHandler","editPost","handleChange","openModal","open","closeModal","delete","deletePost","match","params","_this$state","onClick","index_es","onClose","center","showCloseIcon","App","obj","index","findIndex","put","splice","fPosts","_this2","components_Sidebar","search","Switch","Route","exact","path","render","components_PostsList","assign","components_PostForm","components_PostView","editHandler","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1b571da0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className=\"quote-card\">\r\n      <div className=\"title\">\r\n        <p>{props.title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//Sets default prop values\r\nPost.defaultProps = {\r\n  title: \"\",\r\n  contents: \"\"\r\n};\r\n\r\n//Type validation for props\r\nPost.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contents: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nconst PostsList = props => {\r\n  if (!props.posts) {\r\n    return (\r\n      <div>\r\n        <h1>Loading Posts...</h1>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"PostsList\">\r\n        <div>\r\n          <ul className=\"list\">\r\n            {props.posts\r\n              .map(post => {\r\n                return (\r\n                  <Link to={`/${post.id}`} id={post.id} key={post.id}>\r\n                    <Post\r\n                      title={post.title}\r\n                      id={post.id}\r\n                      contents={post.contents}\r\n                      key={post.id}\r\n                    />\r\n                  </Link>\r\n                );\r\n              })\r\n              .reverse()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPost.defaultProps = {\r\n  posts: []\r\n};\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.array,\r\n  title: PropTypes.string,\r\n  contents: PropTypes.string,\r\n  id: PropTypes.string\r\n};\r\nexport default PostsList;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      contents: \"\"\r\n    };\r\n  }\r\n\r\n  //Adds new note to API\r\n  addNote = event => {\r\n    event.preventDefault();\r\n\r\n    //Validates form input\r\n    if (this.state.title.length < 1 || this.state.contents.length < 1) {\r\n      alert(\"Please fill out all fields!\");\r\n    }\r\n\r\n    //Adds new note, renders the notes list, sets to top of page\r\n    else {\r\n      axios\r\n        .post(\"https://node3-practice.herokuapp.com/api/posts\", this.state)\r\n        .then(() =>\r\n          this.setState({\r\n            title: \"\",\r\n            contents: \"\"\r\n          })\r\n        )\r\n        .catch(error => console.log(error));\r\n      this.props.fetchPosts();\r\n      this.props.history.push(\"/\");\r\n      window.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  //Change handler for form input\r\n  handleInputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PostForm\">\r\n        <div className=\"add-header\">\r\n          {\" \"}\r\n          <h1>Create New Note</h1>\r\n        </div>\r\n        <form onSubmit={this.addNote}>\r\n          <div>\r\n            <input\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Note Title\"\r\n              value={this.state.title}\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <textarea\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Note Content\"\r\n              value={this.state.contents}\r\n              name=\"contents\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"form-submit\" type=\"submit\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//The sidebar component with buttons linking to view page and create page\r\n\r\nconst Sidebar = props => {\r\n  return (\r\n    <section className=\"header\">\r\n      <h1>Quotable</h1>\r\n\r\n      <div className=\"nav\">\r\n        <Link to=\"/\">\r\n          <div className=\"view-all\">My Quotes</div>\r\n        </Link>\r\n        <Link to=\"/create\">\r\n          <div className=\"create-new\">Create New</div>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//PostView is the class that displays a single note. This class deploys the editNote() and deleteNote() functions, which live in the App.js file\r\n\r\nclass PostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  //Mounts fetched note from fetch() function to state\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    this.fetch(id);\r\n  }\r\n\r\n  //Fetches an individual note by id and sets its values to state of this component.\r\n  fetch = id => {\r\n    axios\r\n      .get(`https://node3-practice.herokuapp.com/api/posts/${id}`)\r\n      .then(res => {\r\n        console.log(\"PostView\", res);\r\n        this.setState(() => ({\r\n          id: res.data[0].id,\r\n          title: res.data[0].title,\r\n          contents: res.data[0].contents\r\n        }));\r\n      })\r\n      .catch(err => {\r\n        console.dir(err);\r\n      });\r\n  };\r\n\r\n  /****** Edit Handling Functions *******/\r\n\r\n  //Toggles the edit form\r\n  toggleEdit = e => {\r\n    e.preventDefault();\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  //Validates form input and then triggers edit() function\r\n  editSubmitHandler = e => {\r\n    e.preventDefault();\r\n    if (this.state.title.length < 1 || this.state.contents.length < 1) {\r\n      alert(\"Field cannot be empty!\");\r\n    } else {\r\n      this.props.editPost({\r\n        id: this.state.id,\r\n        title: this.state.title,\r\n        contents: this.state.contents\r\n      });\r\n      this.setState({\r\n        editing: false\r\n      });\r\n    }\r\n  };\r\n\r\n  //Change Handler\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /****** Delete Handling Functions *******/\r\n\r\n  //Opens delete modal\r\n  openModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  //Closes delete modal\r\n  closeModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  //Triggers the delete function and renders the main page view\r\n  delete = e => {\r\n    e.preventDefault();\r\n    this.props.deletePost(this.state.id);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { open, title, contents } = this.state;\r\n\r\n    if (this.state.editing) {\r\n      return (\r\n        <div className=\"edit-form\">\r\n          <div className=\"edit-head\">\r\n            <h1>Edit Note:</h1>\r\n          </div>\r\n\r\n          <form onSubmit={this.editSubmitHandler}>\r\n            <div>\r\n              <input\r\n                className=\"edit-title\"\r\n                name=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"new title\"\r\n                value={title}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <textarea\r\n                className=\"edit-body\"\r\n                name=\"contents\"\r\n                type=\"textarea\"\r\n                placeholder=\"new note\"\r\n                value={contents}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className=\"form-submit\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"note-view\">\r\n        <div className=\"svg\" />\r\n        <div className=\"note-title\">{this.state.title}</div>\r\n\r\n        <div className=\"note-body\">\r\n          <p>{this.state.contents}</p>\r\n        </div>\r\n        <div className=\"note-buttons\">\r\n          <button onClick={this.toggleEdit}>edit</button>\r\n\r\n          <button onClick={this.openModal}>delete</button>\r\n        </div>\r\n        <Modal\r\n          open={open}\r\n          onClose={this.closeModal}\r\n          center\r\n          showCloseIcon={false}\r\n        >\r\n          <div className=\"modal\">\r\n            <p>Are you sure you want to delete this?</p>\r\n\r\n            <button className=\"modal-delete\" onClick={this.delete}>\r\n              Delete\r\n            </button>\r\n            <button onClick={this.closeModal} className=\"modal-no\">\r\n              No\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Type validation for props\r\nPostView.propTypes = {\r\n  id: PropTypes.string,\r\n  editPost: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostView;\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport PostsList from \"./components/PostsList\";\nimport PostForm from \"./components/PostForm\";\nimport Sidebar from \"./components/Sidebar\";\nimport PostView from \"./components/PostView\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      fPosts: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  //Gets all Posts from database\n  fetchPosts = () => {\n    axios\n      .get(\"https://node3-practice.herokuapp.com/api/posts\")\n      .then(res => this.setState({ posts: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  //Edits posts, takes an object as a parameter\n  editPost = obj => {\n    const index = this.state.posts.findIndex(post => post.id === obj.id);\n    console.log(index);\n\n    axios\n      .put(`https://node3-practice.herokuapp.com/api/posts/${obj.id}`, obj)\n      .then(res => {\n        this.setState({\n          posts: this.state.posts.splice(index, 1, res.data)\n        });\n        console.log(\"edited\", res);\n      })\n      .catch(err => console.dir(err));\n  };\n\n  //Deletes post by id\n  deletePost = id => {\n    axios\n      .delete(`https://node3-practice.herokuapp.com/api/posts/${id}`)\n      .then(res => {\n        console.log(\"deleted\", res);\n      })\n      .catch(err => console.dir(err));\n  };\n\n  // //Search\n  // search = e => {\n  //   const arr = this.state.Posts.filter(n => {\n  //     if (n.title === `${e.target.value}`) {\n  //       return n;\n  //     }\n  //   });\n  //   return this.setState({ fPosts: arr });\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"home-view\">\n          <div>\n            <Sidebar search={this.search} />\n          </div>\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <PostsList\n                  {...props}\n                  posts={\n                    this.state.fPosts.length > 0\n                      ? this.state.fPosts\n                      : this.state.posts\n                  }\n                  editPost={this.editPost}\n                  deletePost={this.deletePost}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/create\"\n              render={props => (\n                <PostForm\n                  {...props}\n                  posts={this.state.posts}\n                  fetchPosts={this.fetchPosts}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/:id\"\n              render={props => (\n                <PostView\n                  {...props}\n                  posts={this.state.posts}\n                  editPost={this.editPost}\n                  editHandler={this.editHandler}\n                  handleChange={this.handleChange}\n                  deletePost={this.deletePost}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}